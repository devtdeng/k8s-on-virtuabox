#!/bin/bash

set -euo pipefail

readonly dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

pushd "${dir}/../"
trap 'popd' EXIT

# Set up first master node, after this step, master node will be at READY state, system pods will be running
cat <<EOF | vagrant ssh "master-0" -- sudo bash

echo "Initializing master node 0"
# remove etcd service file from kubelet service as it conflict with 10-kubeadm.conf
rm /etc/systemd/system/kubelet.service.d/20-etcd-service-manager.conf
systemctl daemon-reload && systemctl restart kubelet

# specify advertiseAddress otherwise the default enp0s3 address 10.0.2.15/24 will be used 
ifconfig enp0s8 | grep 'inet addr' | cut -d ' ' -f12 | cut -d ':' -f 2 | sed 's/^/  advertiseAddress: /' > /tmp/advertise_address
head -n -1 /vagrant/config/kubeadm-config.yaml > /tmp/kubeadm-config.yaml
cat /tmp/advertise_address >> /tmp/kubeadm-config.yaml

kubeadm init --ignore-preflight-errors=all --skip-phases=etcd --upload-certs --config="/tmp/kubeadm-config.yaml"
mkdir -p /home/vagrant/.kube && cp -f /etc/kubernetes/admin.conf /home/vagrant/.kube/config && chown vagrant:vagrant /home/vagrant/.kube/config

# apply calico network plugin, pod cidr should be configured as "192.168.0.0/16"
kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml

# generate master/worker join command 
kubeadm token create --print-join-command 2>&1 | tail -n 1 | sed 's/$/ --ignore-preflight-errors=all/' > worker_join_command.sh
kubeadm init phase upload-certs --upload-certs --config="/tmp/kubeadm-config.yaml" 2>&1 | tail -n 1 | sed 's/^/ --control-plane --certificate-key /' > /tmp/certificate-key
cat worker_join_command.sh /tmp/certificate-key | tr -d "\n" > master_join_command.sh

chmod +x master_join_command.sh worker_join_command.sh

# set up password for ssh between guest VMs
sed -i "/^[^#]*PasswordAuthentication[[:space:]]no/c\PasswordAuthentication yes" /etc/ssh/sshd_config
service sshd restart
EOF

# Join master-1/2 as master nodes (with ----control-plane option )
#  `kubelet join` will download secrets from secret/kubeadm-certs in kube-system namespace when --certificate-key is provided
for i in {1..2}; do
cat <<EOF | vagrant ssh "master-${i}" -- sudo bash
echo "Initializing master node ${i}"
rm /etc/systemd/system/kubelet.service.d/20-etcd-service-manager.conf
systemctl daemon-reload && systemctl restart kubelet

apt-get install -y sshpass
sshpass -p "vagrant" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null vagrant@master-0:/home/vagrant/master_join_command.sh .

ifconfig enp0s8 | grep 'inet addr' | cut -d ' ' -f12 | cut -d ':' -f 2 | sed 's/^/ --apiserver-advertise-address /' > /tmp/advertise_address
cat master_join_command.sh /tmp/advertise_address | tr -d "\n" | sh
EOF
done

cat <<EOF | vagrant ssh "master-0" -- sudo bash
kubectl get nodes
kubectl get pods --all-namespaces
EOF