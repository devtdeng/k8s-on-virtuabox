#!/bin/bash

set -euo pipefail

readonly dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

readonly binary_format=amd64
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  readonly binary_platform=linux
elif [[ "$OSTYPE" == "darwin"* ]]; then
  readonly binary_platform=darwin
fi

# Install kubectl on host machine if it doesn't exist
source "${dir}/versions.bash"

if [ ! -f /usr/local/bin/kubectl ]; then
  echo "Installing kubectl tool "

  curl -ssL -o /tmp/kubectl "https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/${binary_platform}/${binary_format}/kubectl"
  chmod +x /tmp/kubectl
  sudo mv -v /tmp/kubectl /usr/local/bin/
fi

vagrant ssh master-0 -c "sudo cat /etc/kubernetes/admin.conf" > ~/.kube/config

echo "192.168.199.40 api.k8s.virtualbox" | sudo tee -a /etc/hosts
echo -e "\033[1m======================================================\033[0m"
echo -e "\033[1mFinished. Cluster should be healthy and soon in state ready:\033[0m"
echo -e "\033[1mapi.k8s.virtualbox is load balancer of masters\033[0m"

kubectl get nodes
kubectl -n kube-system get all